name: Bump Version and Trigger Release

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Type of version bump'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major
        - custom
      custom_version:
        description: 'Custom version (if type is custom, format: x.y.z)'
        required: false
        type: string

jobs:
  bump-version:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Git user
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'

      - name: Get current version and bump
        id: bump_version
        run: |
          # Extract current version from manifest.json
          CURRENT_VERSION=$(grep -o '"version": *"[^"]*"' manifest.json | cut -d'"' -f4)
          echo "Current version: $CURRENT_VERSION"
          
          # Split the version
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"
          
          # Determine new version
          if [[ "${{ github.event.inputs.version_type }}" == "patch" ]]; then
            NEW_VERSION="${MAJOR}.${MINOR}.$((PATCH + 1))"
          elif [[ "${{ github.event.inputs.version_type }}" == "minor" ]]; then
            NEW_VERSION="${MAJOR}.$((MINOR + 1)).0"
          elif [[ "${{ github.event.inputs.version_type }}" == "major" ]]; then
            NEW_VERSION="$((MAJOR + 1)).0.0"
          elif [[ "${{ github.event.inputs.version_type }}" == "custom" ]]; then
            NEW_VERSION="${{ github.event.inputs.custom_version }}"
          fi
          
          echo "New version: $NEW_VERSION"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          
          # Update manifest.json with new version
          sed -i "s/\"version\": *\"$CURRENT_VERSION\"/\"version\": \"$NEW_VERSION\"/" manifest.json

      - name: Commit and push changes
        run: |
          git add manifest.json
          git commit -m "Bump version to ${{ steps.bump_version.outputs.new_version }}"
          git push

      - name: Create and push tag
        run: |
          git tag v${{ steps.bump_version.outputs.new_version }}
          git push origin v${{ steps.bump_version.outputs.new_version }}
          
      - name: Notify user
        run: |
          echo "âœ… Version bumped to ${{ steps.bump_version.outputs.new_version }} and release workflow triggered!"
